{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\lacapsule\\\\final\\\\morningnews\\\\reactapp\\\\src\\\\ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar } from 'antd';\nimport Nav from './Nav';\nimport { connect } from 'react-redux';\n\nfunction ScreenSource(props) {\n  const [sourceList, setSourceList] = useState([]);\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang);\n  useEffect(() => {\n    const findLang = async () => {\n      const reqFind = await fetch(`/user-lang?token=${props.token}`);\n      const resultFind = await reqFind.json();\n      setSelectedLang(resultFind.lang);\n    };\n\n    findLang();\n  }, []);\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      const data = await fetch('/articlessources');\n      const body = await data.json();\n      console.log(body);\n      setSourceList(body);\n    };\n\n    APIResultsLoading();\n  }, [selectedLang]);\n\n  var updateLang = async lang => {\n    setSelectedLang(lang);\n    const reqLang = await fetch('/user-lang', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: `lang=${lang}&token=${props.token}`\n    });\n\n    if (selectedLang == 'fr') {\n      const data = await fetch('/update-lang?langue=fr&country=fr');\n      const body = await data.json();\n      console.log(body);\n      setSourceList(body);\n    } else if (selectedLang == 'en') {\n      const data = await fetch('/update-lang?langue=en&country=us');\n      const body = await data.json();\n      console.log(body);\n      setSourceList(body);\n    }\n  };\n\n  var styleBorderFr = {\n    width: '40px',\n    margin: '10px',\n    cursor: 'pointer'\n  };\n\n  if (selectedLang == 'fr') {\n    styleBorderFr.border = '1px solid black';\n  }\n\n  var styleBorderEn = {\n    width: '40px',\n    margin: '10px',\n    cursor: 'pointer'\n  };\n\n  if (selectedLang == 'en') {\n    styleBorderEn.border = '1px solid black';\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: styleBorderFr,\n    src: \"/images/fr.png\",\n    onClick: () => updateLang('fr'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: styleBorderEn,\n    src: \"/images/uk.png\",\n    onClick: () => updateLang('en'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {\n  return {\n    selectedLang: state.selectedLang,\n    token: state.token\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    changeLang: function (selectedLang) {\n      dispatch({\n        type: 'changeLang',\n        selectedLang: selectedLang\n      });\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ScreenSource);","map":{"version":3,"sources":["C:/Users/user/lacapsule/final/morningnews/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Nav","connect","ScreenSource","props","sourceList","setSourceList","selectedLang","setSelectedLang","findLang","reqFind","fetch","token","resultFind","json","lang","APIResultsLoading","data","body","console","log","updateLang","reqLang","method","headers","styleBorderFr","width","margin","cursor","border","styleBorderEn","display","justifyContent","alignItems","source","category","id","name","description","mapStateToProps","state","mapDispatchToProps","dispatch","changeLang","type"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './App.css';\r\nimport { List, Avatar } from 'antd';\r\nimport Nav from './Nav'\r\nimport { connect } from 'react-redux';\r\n\r\nfunction ScreenSource(props) {\r\n\r\n  const [sourceList, setSourceList] = useState([])\r\n  const [selectedLang, setSelectedLang] = useState(props.selectedLang)\r\n\r\n  useEffect(() => {\r\n    const findLang = async () => {\r\n\r\n      const reqFind = await fetch(`/user-lang?token=${props.token}`)\r\n      const resultFind = await reqFind.json()\r\n\r\n      setSelectedLang(resultFind.lang)\r\n    }\r\n\r\n    findLang()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const APIResultsLoading = async () => {\r\n\r\n      const data = await fetch('/articlessources')\r\n      const body = await data.json()\r\n      console.log(body)\r\n      setSourceList(body)\r\n\r\n    }\r\n\r\n    APIResultsLoading()\r\n  }, [selectedLang])\r\n  var updateLang = async (lang) => {\r\n    setSelectedLang(lang)\r\n\r\n    const reqLang = await fetch('/user-lang', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n      body: `lang=${lang}&token=${props.token}`\r\n    })\r\n    if (selectedLang == 'fr') {\r\n\r\n      const data = await fetch('/update-lang?langue=fr&country=fr')\r\n      const body = await data.json()\r\n      console.log(body)\r\n      setSourceList(body)\r\n\r\n    } else if (selectedLang == 'en') {\r\n\r\n      const data = await fetch('/update-lang?langue=en&country=us')\r\n      const body = await data.json()\r\n      console.log(body)\r\n      setSourceList(body)\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n  var styleBorderFr = { width: '40px', margin: '10px', cursor: 'pointer' }\r\n\r\n  if (selectedLang == 'fr') {\r\n    styleBorderFr.border = '1px solid black'\r\n  }\r\n\r\n  var styleBorderEn = { width: '40px', margin: '10px', cursor: 'pointer' }\r\n\r\n  if (selectedLang == 'en') {\r\n    styleBorderEn.border = '1px solid black'\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n\r\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }} className=\"Banner\">\r\n        <img style={styleBorderFr} src='/images/fr.png' onClick={() => updateLang('fr')} />\r\n        <img style={styleBorderEn} src='/images/uk.png' onClick={() => updateLang('en')} />\r\n      </div>\r\n\r\n      <div className=\"HomeThemes\">\r\n\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={sourceList}\r\n          renderItem={source => (\r\n            <List.Item>\r\n              <List.Item.Meta\r\n                avatar={<Avatar src={`/images/${source.category}.png`} />}\r\n                title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\r\n                description={source.description}\r\n              />\r\n            </List.Item>\r\n          )}\r\n        />\r\n\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return { selectedLang: state.selectedLang, token: state.token }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    changeLang: function (selectedLang) {\r\n      dispatch({ type: 'changeLang', selectedLang: selectedLang })\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ScreenSource)\r\n"]},"metadata":{},"sourceType":"module"}